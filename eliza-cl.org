#+TITLE: eliza-cl.org
#+OPTIONS: num:nil ^:{}
* Preface
**The computer code here is not original to me.** and this document reflects several of my ongoing projects:
1. Learning 'classic' AI by working through Peter Norvig's [[http://norvig.com/paip.html][*Paradigms of Artificial Intelligence: Case Studies in Common Lisp*]].   Norvig's book is the source for the Lisp code in this project.
2. Learning more Emacs in general and org-mode in particular.
3. Developing a work process around Literate Programming.
* Introduction

* Pattern Matching
** simple-equal
#+BEGIN_SRC lisp
  (defun simple-equal (x y)
    "Are x and y equal. Does not check inside strings."
    (if (or (atom x) (atom y))
        (eql x y)
        (and (simple-equal (first x) (first y))
             (simple-equal (rest x) (rest y)))))
#+END_SRC
** pat-match
#+BEGIN_SRC lisp
  (defun pat-match (input pattern)
    "Does pattern match input? Any variable can match anything."
    (if (variable-p pattern)
        t
        (if (or (atom pattern) (atom input))
            (eql pattern input)
            (and (pat-match (first input) (first pattern))
                 (pat-match (rest input) (rest pattern))))))
#+END_SRC
